package renderEngine.drawobjects;

import renderEngine.Loader;
import renderEngine.drawcalls.ClipAreaInfo;
import renderEngine.drawobjects.RectFill.RectData;
import renderEngine.shaders.ShaderProgram;
import sutil.math.SVector;

public final class RectFill extends DrawObject<DrawCall, RectData> {

    public RectFill(Loader loader) {
        super(new ShaderProgram("rectFill", null, true), "RectData", 2, 4, loader);
    }

    @Override
    protected int getVertexCount(DrawCall drawCall) {
        return 1;
    }

    public record RectData(ClipAreaInfo clipArea, boolean applyCheckerboard, SVector color2, double checkerboardSize)
            implements DrawData {

        @Override
        public float[] getUBOData() {
            float[] uboData = new float[8];
            clipArea.setUBOData(uboData);

            uboData[4] = (float) color2.x;
            uboData[5] = (float) color2.y;
            uboData[6] = (float) color2.z;
            uboData[7] = applyCheckerboard ? (float) checkerboardSize : -1;

            return uboData;
        }
    }
}