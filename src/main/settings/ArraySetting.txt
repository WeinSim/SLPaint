package main.settings;

import java.util.ArrayList;

import sutil.json.values.JSONArray;
import sutil.json.values.JSONValue;

public abstract sealed class ArraySetting<S extends Setting<?>> extends Setting<ArrayList<S>> permits ColorArraySetting {

    public ArraySetting(String identifier) {
        super(identifier);
    }

    @Override
    public JSONValue getJSONValue() {
        JSONArray array = new JSONArray();
        for (S setting : value) {
            array.add(setting.getJSONValue());
        }
        return array;
    }

    @Override
    public void setJSONValue(JSONValue value) {
        if (value instanceof JSONArray array) {
            this.value = new ArrayList<>();
            for (int i = 0; i < array.size(); i++) {
                String identifier = String.format("%s[%d]", this.identifier, i);
                S setting = createNew(identifier);
                setting.setJSONValue(array.get(i));
                this.value.add(setting);
            }
        } else {
            handleIncorrectJSONType("JSONArray", value.getClass().getName());
        }
    }

    protected abstract S createNew(String name);
}